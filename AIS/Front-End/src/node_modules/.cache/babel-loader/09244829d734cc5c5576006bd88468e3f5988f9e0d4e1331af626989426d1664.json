{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\athar\\\\Desktop\\\\Projects\\\\AIS v2\\\\ais_front_end\\\\src\\\\components\\\\SpeechRecognitionComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport styles from './SpeechRecognition.module.css'; // Import CSS module\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SpeechRecognitionComponent = () => {\n  _s();\n  const [transcript, setTranscript] = useState('');\n  const [isListening, setIsListening] = useState(false);\n  const recognitionRef = useRef(null);\n  const [query, setQuery] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true); // Set loading state to true when submitting form\n    try {\n      console.log({\n        \"herb_name\": query\n      });\n      const response = await axios.post('http://localhost:5000/get-herb-details', {\n        \"herb_name\": query\n      });\n      setHerbData(response.data);\n    } catch (error) {\n      console.error('Error fetching herb data:', error);\n    } finally {\n      setLoading(false); // Set loading state to false after receiving response\n    }\n  };\n  const toggleListen = () => {\n    if (isListening) {\n      recognitionRef.current.stop();\n    } else {\n      recognitionRef.current.start();\n    }\n  };\n  const handleSearch = () => {\n    // Implement your search logic here using the transcript state\n    console.log('Search for:', transcript);\n  };\n  useEffect(() => {\n    recognitionRef.current = new window.webkitSpeechRecognition();\n    recognitionRef.current.continuous = true;\n    recognitionRef.current.interimResults = true;\n    recognitionRef.current.onstart = () => {\n      setIsListening(true);\n    };\n    recognitionRef.current.onend = () => {\n      setIsListening(false);\n    };\n    recognitionRef.current.onresult = event => {\n      let interimTranscript = '';\n      let finalTranscript = '';\n      for (let i = event.resultIndex; i < event.results.length; i++) {\n        const transcript = event.results[i][0].transcript;\n        if (event.results[i].isFinal) {\n          finalTranscript += transcript + ' ';\n        } else {\n          interimTranscript += transcript;\n        }\n      }\n      setTranscript(finalTranscript + interimTranscript);\n    };\n    return () => {\n      if (recognitionRef.current) {\n        recognitionRef.current.stop();\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.speechRecognitionContainer,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleListen,\n        className: `${styles.voiceSearchButton} ${isListening ? styles.voiceSearchButtonListening : ''}`,\n        children: isListening ? 'Stop Listening' : 'Start Listening'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        value: transcript,\n        onChange: () => {},\n        placeholder: \"Speak or type here...\",\n        className: styles.textAreaContainer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        className: styles.searchButton,\n        children: \"Go\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(SpeechRecognitionComponent, \"OLV1f/dNooTPHSfHX8M/r5FKy1o=\");\n_c = SpeechRecognitionComponent;\nexport default SpeechRecognitionComponent;\nvar _c;\n$RefreshReg$(_c, \"SpeechRecognitionComponent\");","map":{"version":3,"names":["React","useState","useEffect","useRef","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","SpeechRecognitionComponent","_s","transcript","setTranscript","isListening","setIsListening","recognitionRef","query","setQuery","handleSubmit","e","preventDefault","setLoading","console","log","response","axios","post","setHerbData","data","error","toggleListen","current","stop","start","handleSearch","window","webkitSpeechRecognition","continuous","interimResults","onstart","onend","onresult","event","interimTranscript","finalTranscript","i","resultIndex","results","length","isFinal","children","className","speechRecognitionContainer","onClick","voiceSearchButton","voiceSearchButtonListening","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","placeholder","textAreaContainer","searchButton","_c","$RefreshReg$"],"sources":["C:/Users/athar/Desktop/Projects/AIS v2/ais_front_end/src/components/SpeechRecognitionComponent.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport styles from './SpeechRecognition.module.css'; // Import CSS module\r\n\r\nconst SpeechRecognitionComponent = () => {\r\n  const [transcript, setTranscript] = useState('');\r\n  const [isListening, setIsListening] = useState(false);\r\n  const recognitionRef = useRef(null);\r\n\r\n  const [query, setQuery] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true); // Set loading state to true when submitting form\r\n    try {\r\n        console.log({ \"herb_name\": query });\r\n        const response = await axios.post('http://localhost:5000/get-herb-details', { \"herb_name\": query });\r\n      setHerbData(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching herb data:', error);\r\n    } finally {\r\n        setLoading(false); // Set loading state to false after receiving response\r\n    }\r\n  };\r\n\r\n  const toggleListen = () => {\r\n    if (isListening) {\r\n      recognitionRef.current.stop();\r\n    } else {\r\n      recognitionRef.current.start();\r\n    }\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    // Implement your search logic here using the transcript state\r\n    console.log('Search for:', transcript);\r\n  };\r\n\r\n  useEffect(() => {\r\n    recognitionRef.current = new window.webkitSpeechRecognition();\r\n    recognitionRef.current.continuous = true;\r\n    recognitionRef.current.interimResults = true;\r\n\r\n    recognitionRef.current.onstart = () => {\r\n      setIsListening(true);\r\n    };\r\n\r\n    recognitionRef.current.onend = () => {\r\n      setIsListening(false);\r\n    };\r\n\r\n    recognitionRef.current.onresult = event => {\r\n      let interimTranscript = '';\r\n      let finalTranscript = '';\r\n\r\n      for (let i = event.resultIndex; i < event.results.length; i++) {\r\n        const transcript = event.results[i][0].transcript;\r\n        if (event.results[i].isFinal) {\r\n          finalTranscript += transcript + ' ';\r\n        } else {\r\n          interimTranscript += transcript;\r\n        }\r\n      }\r\n\r\n      setTranscript(finalTranscript + interimTranscript);\r\n    };\r\n\r\n    return () => {\r\n      if (recognitionRef.current) {\r\n        recognitionRef.current.stop();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n    <div className={styles.speechRecognitionContainer}>\r\n         <button\r\n        onClick={toggleListen}\r\n        className={`${styles.voiceSearchButton} ${isListening ? styles.voiceSearchButtonListening : ''}`}\r\n        >\r\n        {isListening ? 'Stop Listening' : 'Start Listening'}\r\n      </button>\r\n      </div>\r\n      <div>\r\n      <textarea\r\n        type=\"text\"\r\n        value={transcript}\r\n        onChange={() => {}}\r\n        placeholder=\"Speak or type here...\"\r\n        className={styles.textAreaContainer}\r\n      />\r\n      </div>\r\n      <div>\r\n      <button onClick={handleSearch} className={styles.searchButton}>Go</button>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SpeechRecognitionComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}